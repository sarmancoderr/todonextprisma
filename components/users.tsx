import type { UserAccountModel } from 'prismamodule'
import Head from 'next/head'
import { SyntheticEvent, useEffect, useState } from 'react'

export default function UsersForm() {
    const [userText, setUserText] = useState('')
    const [userPasswordText, setUserPasswordText] = useState('')
    const [users, setUsersList] = useState<UserAccountModel[]>([])
    const [loading, setLoading] = useState(true)
    const [error, setError] = useState(null)

    useEffect(() => { loadUsers() }, [])

    const loadUsers = async () => {
        try {
            const usersRequest = await fetch('/api/users')
            const { users } = await usersRequest.json()
            setUsersList(users)
        } catch (error: any) {
            console.log(error)
            setError(error.message)
        } finally {
            setLoading(false)
        }
    }

    if (loading) {
        return (<p>Loading</p>)
    }

    if (error) {
        console.log(error)
        return (<p>error</p>)
    }

    async function addUser(e: SyntheticEvent) {
        e.preventDefault();
        console.log('adding todo')

        try {
            const usersRequest = await fetch('/api/users', {
                method: 'post',
                body: JSON.stringify({ password: userPasswordText, username: userText })
            })
            const { user } = await usersRequest.json()
            setUsersList([...users, user])
            setUserText('')
        } catch (error: any) {
            console.log(error)
            setError(error.message)
        } finally {
            setLoading(false)
        }
    }

    const addformtodo = (
        <form onSubmit={addUser}>
            <input type="text" placeholder='username' value={userText} onChange={(e) => setUserText(e.target.value)} />
            <input placeholder='password' type={'password'} value={userPasswordText} onChange={(e) => setUserPasswordText(e.target.value)} />
            <button type='submit'>AÃ±adir todo</button>
        </form>
    )

    if (users.length === 0) {
        return (
            <>
                <p>No hay todos</p>
                {addformtodo}
            </>
        )
    }

    return (
        <div>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <ul>
                {users.map((user) => (<li key={user.id}>{user.username}</li>))}
            </ul>

            {addformtodo}
        </div>
    )
}